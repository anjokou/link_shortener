// Code generated by MockGen. DO NOT EDIT.
// Source: metrics/metricsDA.go

// Package mock_metrics is a generated GoMock package.
package mocks

import (
	metrics "link_shortener_analytics/metrics"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockMetricsDA is a mock of MetricsDA interface.
type MockMetricsDA struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsDAMockRecorder
}

// MockMetricsDAMockRecorder is the mock recorder for MockMetricsDA.
type MockMetricsDAMockRecorder struct {
	mock *MockMetricsDA
}

// NewMockMetricsDA creates a new mock instance.
func NewMockMetricsDA(ctrl *gomock.Controller) *MockMetricsDA {
	mock := &MockMetricsDA{ctrl: ctrl}
	mock.recorder = &MockMetricsDAMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsDA) EXPECT() *MockMetricsDAMockRecorder {
	return m.recorder
}

// AddToAccessCount mocks base method.
func (m *MockMetricsDA) AddToAccessCount(linkId string, amount uint64) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddToAccessCount", linkId, amount)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddToAccessCount indicates an expected call of AddToAccessCount.
func (mr *MockMetricsDAMockRecorder) AddToAccessCount(linkId, amount interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddToAccessCount", reflect.TypeOf((*MockMetricsDA)(nil).AddToAccessCount), linkId, amount)
}

// Create mocks base method.
func (m *MockMetricsDA) Create(value metrics.Metrics) (*metrics.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", value)
	ret0, _ := ret[0].(*metrics.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Create indicates an expected call of Create.
func (mr *MockMetricsDAMockRecorder) Create(value interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockMetricsDA)(nil).Create), value)
}

// Get mocks base method.
func (m *MockMetricsDA) Get(linkId string) (*metrics.Metrics, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", linkId)
	ret0, _ := ret[0].(*metrics.Metrics)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockMetricsDAMockRecorder) Get(linkId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockMetricsDA)(nil).Get), linkId)
}
