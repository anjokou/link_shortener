// Code generated by MockGen. DO NOT EDIT.
// Source: links/linkDA.go

// Package mock_links is a generated GoMock package.
package mocks

import (
	links "link_shortener/links"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockLinkDA is a mock of LinkDA interface.
type MockLinkDA struct {
	ctrl     *gomock.Controller
	recorder *MockLinkDAMockRecorder
}

// MockLinkDAMockRecorder is the mock recorder for MockLinkDA.
type MockLinkDAMockRecorder struct {
	mock *MockLinkDA
}

// NewMockLinkDA creates a new mock instance.
func NewMockLinkDA(ctrl *gomock.Controller) *MockLinkDA {
	mock := &MockLinkDA{ctrl: ctrl}
	mock.recorder = &MockLinkDAMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLinkDA) EXPECT() *MockLinkDAMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockLinkDA) Get(id string) (*links.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", id)
	ret0, _ := ret[0].(*links.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockLinkDAMockRecorder) Get(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockLinkDA)(nil).Get), id)
}

// GetByUrl mocks base method.
func (m *MockLinkDA) GetByUrl(url string) (*links.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetByUrl", url)
	ret0, _ := ret[0].(*links.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetByUrl indicates an expected call of GetByUrl.
func (mr *MockLinkDAMockRecorder) GetByUrl(url interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetByUrl", reflect.TypeOf((*MockLinkDA)(nil).GetByUrl), url)
}

// Save mocks base method.
func (m *MockLinkDA) Save(link links.Link) (*links.Link, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Save", link)
	ret0, _ := ret[0].(*links.Link)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Save indicates an expected call of Save.
func (mr *MockLinkDAMockRecorder) Save(link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Save", reflect.TypeOf((*MockLinkDA)(nil).Save), link)
}
