// Code generated by MockGen. DO NOT EDIT.
// Source: analytics/analyticsEngine.go

// Package mock_analytics is a generated GoMock package.
package mocks

import (
	links "link_shortener/links"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockAnalyticsEngine is a mock of AnalyticsEngine interface.
type MockAnalyticsEngine struct {
	ctrl     *gomock.Controller
	recorder *MockAnalyticsEngineMockRecorder
}

// MockAnalyticsEngineMockRecorder is the mock recorder for MockAnalyticsEngine.
type MockAnalyticsEngineMockRecorder struct {
	mock *MockAnalyticsEngine
}

// NewMockAnalyticsEngine creates a new mock instance.
func NewMockAnalyticsEngine(ctrl *gomock.Controller) *MockAnalyticsEngine {
	mock := &MockAnalyticsEngine{ctrl: ctrl}
	mock.recorder = &MockAnalyticsEngineMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockAnalyticsEngine) EXPECT() *MockAnalyticsEngineMockRecorder {
	return m.recorder
}

// Accessed mocks base method.
func (m *MockAnalyticsEngine) Accessed(link links.Link, timesAccessed int) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Accessed", link, timesAccessed)
}

// Accessed indicates an expected call of Accessed.
func (mr *MockAnalyticsEngineMockRecorder) Accessed(link, timesAccessed interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Accessed", reflect.TypeOf((*MockAnalyticsEngine)(nil).Accessed), link, timesAccessed)
}

// Created mocks base method.
func (m *MockAnalyticsEngine) Created(link links.Link) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Created", link)
}

// Created indicates an expected call of Created.
func (mr *MockAnalyticsEngineMockRecorder) Created(link interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Created", reflect.TypeOf((*MockAnalyticsEngine)(nil).Created), link)
}
